{
  "version": 3,
  "sources": [
    "test.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMQ;AAAa;AAAb;AAFR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;AAyHK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AAtGL;;;AAAA;AAAA;;AAsGK;;;AAAA;;AApBA;;AAAA;AAAA;AAAA;;AAAA;AAlFL;;;AAAA;AAAA;;AAkFK;;;AAAA;;AAtCA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAvCA;;AAAA;AAAA;AAAA;;AAAA;AALL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAAA;AAKK;;;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;AALL;;AAAA;;;;;;;;;AAKA;;;AAOe;;AAAA;;AAAsB;;;;AAAtB;AAAP;AAER;;AAAA;;;AAC2B;AAGH;;AACA;;AAKF;;;;AADG;;;AADM;;;;;;;;;;;AALL;;;AADC;;;AADA;;;;AAAA;;;AAAA;;;AAyBnB;AAAA;;AAAA;AAEA;AAZmB;AAGH;;AACA;;AAGF;;;;AADG;;;;;;;;;AAJC;;;AADC;;;AADA;;;;AAAA;;;AAAA;;;;;;AAmBhB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAA6B;AAA7B;AAAX;;;AAKY;AACmB;;AACF;AAAA;AAAA;AAAA;AACN;;;;;;;AAHX;;;AAAA;;;AAAA;AAMA;AACmB;;AAEJ;AAAA;AAAA;AAAA;;;AADE;;;;;AAFjB;;;AAAA;;;AAAA;AAMA;AACmB;;AACF;AAAA;AAAA;AAAA;AACN;;;;;;;AAHX;;;AAAA;;;AAAA;AAcJ;;AAA4B;;AAA5B;;AANI;AACmB;;AAEJ;AAAA;AAAA;AAAA;;;AADE;;;;;AAFjB;;;AAAA;;;AAAA;;;;AAQZ;;;AAMoB;;AACuC;;AAAZ;AAAhC;AAAA;;AAAA;;AAAA;AAAA;AAAwD;AAAxD;;AAA8D;AAA9D;AAAP;AACA;AACmB;;AACF;AAAA;AAAA;AAAA;AACN;;;;;;;AAHX;;;AAAA;;;AAAA;AAMA;AAEiB;AAAA;AAAA;AAAA;AACN;;;;;;;;;AAHX;;;AAAA;;;AAAA;;AAMR;;;AAMQ;AACmB;;AACF;AAAA;AAAA;AAAA;AACN;;;;;;;AAHX;;;AAAA;;;AAAA;AAMA;AAEiB;AAAA;AAAA;AAAA;AACN;;;;;;;;;AAHX;;;AAAA;;;AAAA;;AAYA;AACe;AAAA;AAAA;AAAA;AACI;;AACR;AACM;AAAA;;AAAA;AAAA;AACA;;;;;;;;;;;AALjB;;;AAAA;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test.Test.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 5 4"
    },
    "7": {
      "op": "bytecblock \"asset\" 0x61d7e762 \"T1\" \"Test\" \"account_dispensed_to\""
    },
    "49": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "51": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "54": {
      "op": "bytec_0 // \"asset\"",
      "defined_out": [
        "\"asset\""
      ],
      "stack_out": [
        "\"asset\""
      ]
    },
    "55": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"asset\"",
        "0"
      ],
      "stack_out": [
        "\"asset\"",
        "0"
      ]
    },
    "56": {
      "op": "app_global_put",
      "stack_out": []
    },
    "57": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "59": {
      "op": "bz main_bare_routing@10",
      "stack_out": []
    },
    "62": {
      "op": "pushbytess 0x75222f7b 0xaffd8799 0xad8872bf // method \"create_asset(pay,bool)uint64\", method \"transfer_asset()void\", method \"user_request_unfreeze(account)void\"",
      "defined_out": [
        "Method(create_asset(pay,bool)uint64)",
        "Method(transfer_asset()void)",
        "Method(user_request_unfreeze(account)void)"
      ],
      "stack_out": [
        "Method(create_asset(pay,bool)uint64)",
        "Method(transfer_asset()void)",
        "Method(user_request_unfreeze(account)void)"
      ]
    },
    "79": {
      "op": "bytec_1 // method \"user_request_freeze(account)void\"",
      "defined_out": [
        "Method(create_asset(pay,bool)uint64)",
        "Method(transfer_asset()void)",
        "Method(user_request_freeze(account)void)",
        "Method(user_request_unfreeze(account)void)"
      ],
      "stack_out": [
        "Method(create_asset(pay,bool)uint64)",
        "Method(transfer_asset()void)",
        "Method(user_request_unfreeze(account)void)",
        "Method(user_request_freeze(account)void)"
      ]
    },
    "80": {
      "op": "pushbytes 0xdfbc0ab6 // method \"clawback_asset()void\"",
      "defined_out": [
        "Method(clawback_asset()void)",
        "Method(create_asset(pay,bool)uint64)",
        "Method(transfer_asset()void)",
        "Method(user_request_freeze(account)void)",
        "Method(user_request_unfreeze(account)void)"
      ],
      "stack_out": [
        "Method(create_asset(pay,bool)uint64)",
        "Method(transfer_asset()void)",
        "Method(user_request_unfreeze(account)void)",
        "Method(user_request_freeze(account)void)",
        "Method(clawback_asset()void)"
      ]
    },
    "86": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(clawback_asset()void)",
        "Method(create_asset(pay,bool)uint64)",
        "Method(transfer_asset()void)",
        "Method(user_request_freeze(account)void)",
        "Method(user_request_unfreeze(account)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(create_asset(pay,bool)uint64)",
        "Method(transfer_asset()void)",
        "Method(user_request_unfreeze(account)void)",
        "Method(user_request_freeze(account)void)",
        "Method(clawback_asset()void)",
        "tmp%2#0"
      ]
    },
    "89": {
      "op": "match main_create_asset_route@5 main_transfer_asset_route@6 main_user_request_unfreeze_route@7 main_user_request_freeze_route@8 main_clawback_asset_route@9",
      "stack_out": []
    },
    "101": {
      "block": "main_after_if_else@12",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "102": {
      "op": "return",
      "stack_out": []
    },
    "103": {
      "block": "main_clawback_asset_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "105": {
      "op": "!",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "106": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "107": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "109": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "110": {
      "callsub": "test.Test.clawback_asset",
      "op": "callsub clawback_asset"
    },
    "113": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "114": {
      "op": "return",
      "stack_out": []
    },
    "115": {
      "block": "main_user_request_freeze_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "117": {
      "op": "!",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "118": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "119": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "121": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "122": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "125": {
      "op": "btoi",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "126": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "128": {
      "callsub": "test.Test.user_request_freeze",
      "op": "callsub user_request_freeze",
      "stack_out": []
    },
    "131": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "132": {
      "op": "return",
      "stack_out": []
    },
    "133": {
      "block": "main_user_request_unfreeze_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "135": {
      "op": "!",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "136": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "137": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "139": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "140": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "143": {
      "op": "btoi",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "144": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "146": {
      "callsub": "test.Test.user_request_unfreeze",
      "op": "callsub user_request_unfreeze",
      "stack_out": []
    },
    "149": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "150": {
      "op": "return",
      "stack_out": []
    },
    "151": {
      "block": "main_transfer_asset_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "153": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "154": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "155": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "157": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "158": {
      "callsub": "test.Test.transfer_asset",
      "op": "callsub transfer_asset"
    },
    "161": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "162": {
      "op": "return",
      "stack_out": []
    },
    "163": {
      "block": "main_create_asset_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "165": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "166": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "167": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "169": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "170": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "172": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "1"
      ]
    },
    "173": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "174": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "175": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "177": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "178": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "179": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "180": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "183": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "gtxn_idx%0#0",
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[1]%0#0",
        "0"
      ]
    },
    "184": {
      "op": "getbit",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%8#0"
      ]
    },
    "185": {
      "callsub": "test.Test.create_asset",
      "op": "callsub create_asset",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "188": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "189": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "195": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "196": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "197": {
      "op": "log",
      "stack_out": []
    },
    "198": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "199": {
      "op": "return",
      "stack_out": []
    },
    "200": {
      "block": "main_bare_routing@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "202": {
      "op": "bnz main_after_if_else@12",
      "stack_out": []
    },
    "205": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "207": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "208": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "209": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "210": {
      "op": "return",
      "stack_out": []
    },
    "211": {
      "subroutine": "test.Test.create_asset",
      "params": {
        "mbr_payment#0": "uint64",
        "freeze#0": "uint64"
      },
      "block": "create_asset",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "214": {
      "op": "frame_dig -2",
      "defined_out": [
        "mbr_payment#0 (copy)"
      ],
      "stack_out": [
        "mbr_payment#0 (copy)"
      ]
    },
    "216": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "218": {
      "op": "pushint 100000 // 100000",
      "defined_out": [
        "100000",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "100000"
      ]
    },
    "222": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "223": {
      "op": "assert",
      "stack_out": []
    },
    "224": {
      "op": "frame_dig -1",
      "defined_out": [
        "freeze#0 (copy)"
      ],
      "stack_out": [
        "freeze#0 (copy)"
      ]
    },
    "226": {
      "op": "bz create_asset_else_body@3",
      "stack_out": []
    },
    "229": {
      "op": "itxn_begin"
    },
    "230": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "232": {
      "op": "dupn 3",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "234": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "100"
      ]
    },
    "236": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "238": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "0"
      ]
    },
    "239": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "241": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "1"
      ]
    },
    "242": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "244": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "246": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "248": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "250": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": []
    },
    "252": {
      "op": "bytec_2 // \"T1\"",
      "defined_out": [
        "\"T1\""
      ],
      "stack_out": [
        "\"T1\""
      ]
    },
    "253": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": []
    },
    "255": {
      "op": "bytec_3 // \"Test\"",
      "defined_out": [
        "\"Test\""
      ],
      "stack_out": [
        "\"Test\""
      ]
    },
    "256": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": []
    },
    "258": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg"
      ],
      "stack_out": [
        "acfg"
      ]
    },
    "260": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "262": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "263": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "265": {
      "op": "itxn_submit"
    },
    "266": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "create_asset.CreatedAssetID#0"
      ],
      "stack_out": [
        "create_asset.CreatedAssetID#0"
      ]
    },
    "268": {
      "block": "create_asset_after_if_else@5",
      "stack_in": [
        "create_asset.CreatedAssetID#0"
      ],
      "op": "bytec_0 // \"asset\"",
      "defined_out": [
        "\"asset\""
      ],
      "stack_out": [
        "create_asset.CreatedAssetID#0",
        "\"asset\""
      ]
    },
    "269": {
      "op": "dig 1",
      "defined_out": [
        "\"asset\"",
        "create_asset.CreatedAssetID#0",
        "create_asset.CreatedAssetID#0 (copy)"
      ],
      "stack_out": [
        "create_asset.CreatedAssetID#0",
        "\"asset\"",
        "create_asset.CreatedAssetID#0 (copy)"
      ]
    },
    "271": {
      "op": "app_global_put",
      "stack_out": [
        "create_asset.CreatedAssetID#0"
      ]
    },
    "272": {
      "retsub": true,
      "op": "retsub"
    },
    "273": {
      "block": "create_asset_else_body@3",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "274": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "276": {
      "op": "dupn 2",
      "defined_out": [
        "inner_txn_params%1%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "278": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "inner_txn_params%1%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetClawback_idx_0#0",
        "100"
      ]
    },
    "280": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": [
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "282": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%1%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetClawback_idx_0#0",
        "0"
      ]
    },
    "283": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": [
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "285": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "287": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "289": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": []
    },
    "291": {
      "op": "bytec_2 // \"T1\"",
      "defined_out": [
        "\"T1\""
      ],
      "stack_out": [
        "\"T1\""
      ]
    },
    "292": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": []
    },
    "294": {
      "op": "bytec_3 // \"Test\"",
      "defined_out": [
        "\"Test\""
      ],
      "stack_out": [
        "\"Test\""
      ]
    },
    "295": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": []
    },
    "297": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg"
      ],
      "stack_out": [
        "acfg"
      ]
    },
    "299": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "301": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "302": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "304": {
      "op": "itxn_submit"
    },
    "305": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "create_asset.CreatedAssetID#0"
      ],
      "stack_out": [
        "create_asset.CreatedAssetID#0"
      ]
    },
    "307": {
      "op": "b create_asset_after_if_else@5"
    },
    "310": {
      "subroutine": "test.Test.transfer_asset",
      "params": {},
      "block": "transfer_asset",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "311": {
      "op": "bytec_0 // \"asset\"",
      "defined_out": [
        "\"asset\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"asset\""
      ]
    },
    "312": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "313": {
      "error": "check self.asset exists",
      "op": "assert // check self.asset exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "314": {
      "op": "asset_params_get AssetDefaultFrozen",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "316": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "317": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "1"
      ]
    },
    "318": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "319": {
      "op": "bz transfer_asset_else_body@5",
      "stack_out": []
    },
    "322": {
      "op": "itxn_begin"
    },
    "323": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0"
      ]
    },
    "325": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "0"
      ]
    },
    "326": {
      "op": "bytec_0 // \"asset\"",
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "0",
        "\"asset\""
      ]
    },
    "327": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "328": {
      "error": "check self.asset exists",
      "op": "assert // check self.asset exists",
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%1#0"
      ]
    },
    "329": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "330": {
      "op": "itxn_field FreezeAssetFrozen",
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%1#0"
      ]
    },
    "332": {
      "op": "itxn_field FreezeAsset",
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0"
      ]
    },
    "334": {
      "op": "itxn_field FreezeAssetAccount",
      "stack_out": []
    },
    "336": {
      "op": "intc_2 // afrz",
      "defined_out": [
        "afrz"
      ],
      "stack_out": [
        "afrz"
      ]
    },
    "337": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "339": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "340": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "342": {
      "op": "itxn_submit"
    },
    "343": {
      "op": "itxn_begin"
    },
    "344": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "346": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "347": {
      "op": "bytec_0 // \"asset\"",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "0",
        "\"asset\""
      ]
    },
    "348": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "349": {
      "error": "check self.asset exists",
      "op": "assert // check self.asset exists",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0"
      ]
    },
    "350": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "352": {
      "op": "intc_1 // 1",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "1"
      ]
    },
    "353": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "355": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "357": {
      "op": "intc_3 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "358": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "360": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "361": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "363": {
      "op": "itxn_submit"
    },
    "364": {
      "op": "itxn_begin"
    },
    "365": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%2%%param_FreezeAssetAccount_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_FreezeAssetAccount_idx_0#0"
      ]
    },
    "367": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%2%%param_FreezeAssetAccount_idx_0#0",
        "0"
      ]
    },
    "368": {
      "op": "bytec_0 // \"asset\"",
      "stack_out": [
        "inner_txn_params%2%%param_FreezeAssetAccount_idx_0#0",
        "0",
        "\"asset\""
      ]
    },
    "369": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%2%%param_FreezeAssetAccount_idx_0#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "370": {
      "error": "check self.asset exists",
      "op": "assert // check self.asset exists",
      "stack_out": [
        "inner_txn_params%2%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%3#0"
      ]
    },
    "371": {
      "op": "intc_1 // 1",
      "stack_out": [
        "inner_txn_params%2%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "372": {
      "op": "itxn_field FreezeAssetFrozen",
      "stack_out": [
        "inner_txn_params%2%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%3#0"
      ]
    },
    "374": {
      "op": "itxn_field FreezeAsset",
      "stack_out": [
        "inner_txn_params%2%%param_FreezeAssetAccount_idx_0#0"
      ]
    },
    "376": {
      "op": "itxn_field FreezeAssetAccount",
      "stack_out": []
    },
    "378": {
      "op": "intc_2 // afrz",
      "stack_out": [
        "afrz"
      ]
    },
    "379": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "381": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "382": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "384": {
      "op": "itxn_submit"
    },
    "385": {
      "block": "transfer_asset_after_if_else@7",
      "stack_in": [],
      "op": "bytec 4 // \"account_dispensed_to\"",
      "defined_out": [
        "\"account_dispensed_to\""
      ],
      "stack_out": [
        "\"account_dispensed_to\""
      ]
    },
    "387": {
      "op": "txn Sender",
      "defined_out": [
        "\"account_dispensed_to\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "\"account_dispensed_to\"",
        "new_state_value%0#0"
      ]
    },
    "389": {
      "op": "app_global_put",
      "stack_out": []
    },
    "390": {
      "retsub": true,
      "op": "retsub"
    },
    "391": {
      "block": "transfer_asset_else_body@5",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "392": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ]
    },
    "394": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "395": {
      "op": "bytec_0 // \"asset\"",
      "defined_out": [
        "\"asset\"",
        "0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "0",
        "\"asset\""
      ]
    },
    "396": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "397": {
      "error": "check self.asset exists",
      "op": "assert // check self.asset exists",
      "stack_out": [
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "maybe_value%4#0"
      ]
    },
    "398": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ]
    },
    "400": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "1"
      ]
    },
    "401": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ]
    },
    "403": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "405": {
      "op": "intc_3 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "406": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "408": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "409": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "411": {
      "op": "itxn_submit"
    },
    "412": {
      "op": "b transfer_asset_after_if_else@7"
    },
    "415": {
      "subroutine": "test.Test.user_request_unfreeze",
      "params": {
        "receiver#0": "bytes"
      },
      "block": "user_request_unfreeze",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "418": {
      "op": "txn GroupIndex",
      "defined_out": [
        "txn_index#0"
      ],
      "stack_out": [
        "txn_index#0"
      ]
    },
    "420": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "txn_index#0"
      ],
      "stack_out": [
        "txn_index#0",
        "2"
      ]
    },
    "422": {
      "op": "+",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "423": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "424": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "426": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "appl"
      ]
    },
    "428": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "429": {
      "error": "transaction type is appl",
      "op": "assert // transaction type is appl",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "430": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "0"
      ]
    },
    "431": {
      "op": "gtxnsas ApplicationArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "433": {
      "op": "bytec_1 // method \"user_request_freeze(account)void\"",
      "defined_out": [
        "Method(user_request_freeze(account)void)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "Method(user_request_freeze(account)void)"
      ]
    },
    "434": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "435": {
      "error": "User did not request freeze after unfreeze and transfer",
      "op": "assert // User did not request freeze after unfreeze and transfer",
      "stack_out": []
    },
    "436": {
      "op": "itxn_begin"
    },
    "437": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0"
      ]
    },
    "439": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "0"
      ]
    },
    "440": {
      "op": "bytec_0 // \"asset\"",
      "defined_out": [
        "\"asset\"",
        "0",
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "0",
        "\"asset\""
      ]
    },
    "441": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "442": {
      "error": "check self.asset exists",
      "op": "assert // check self.asset exists",
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%0#0"
      ]
    },
    "443": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "444": {
      "op": "itxn_field FreezeAssetFrozen",
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%0#0"
      ]
    },
    "446": {
      "op": "itxn_field FreezeAsset",
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0"
      ]
    },
    "448": {
      "op": "itxn_field FreezeAssetAccount",
      "stack_out": []
    },
    "450": {
      "op": "intc_2 // afrz",
      "defined_out": [
        "afrz"
      ],
      "stack_out": [
        "afrz"
      ]
    },
    "451": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "453": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "454": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "456": {
      "op": "itxn_submit"
    },
    "457": {
      "op": "itxn_begin"
    },
    "458": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "459": {
      "op": "bytec_0 // \"asset\"",
      "stack_out": [
        "0",
        "\"asset\""
      ]
    },
    "460": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "461": {
      "error": "check self.asset exists",
      "op": "assert // check self.asset exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "462": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "0"
      ]
    },
    "463": {
      "op": "itxn_field FreezeAssetFrozen",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "465": {
      "op": "itxn_field FreezeAsset",
      "stack_out": []
    },
    "467": {
      "op": "frame_dig -1",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "receiver#0 (copy)"
      ]
    },
    "469": {
      "op": "itxn_field FreezeAssetAccount",
      "stack_out": []
    },
    "471": {
      "op": "intc_2 // afrz",
      "stack_out": [
        "afrz"
      ]
    },
    "472": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "474": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "475": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "477": {
      "op": "itxn_submit"
    },
    "478": {
      "retsub": true,
      "op": "retsub"
    },
    "479": {
      "subroutine": "test.Test.user_request_freeze",
      "params": {
        "receiver#0": "bytes"
      },
      "block": "user_request_freeze",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "482": {
      "op": "itxn_begin"
    },
    "483": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0"
      ]
    },
    "485": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "0"
      ]
    },
    "486": {
      "op": "bytec_0 // \"asset\"",
      "defined_out": [
        "\"asset\"",
        "0",
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "0",
        "\"asset\""
      ]
    },
    "487": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "488": {
      "error": "check self.asset exists",
      "op": "assert // check self.asset exists",
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%0#0"
      ]
    },
    "489": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "490": {
      "op": "itxn_field FreezeAssetFrozen",
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0",
        "maybe_value%0#0"
      ]
    },
    "492": {
      "op": "itxn_field FreezeAsset",
      "stack_out": [
        "inner_txn_params%0%%param_FreezeAssetAccount_idx_0#0"
      ]
    },
    "494": {
      "op": "itxn_field FreezeAssetAccount",
      "stack_out": []
    },
    "496": {
      "op": "intc_2 // afrz",
      "defined_out": [
        "afrz"
      ],
      "stack_out": [
        "afrz"
      ]
    },
    "497": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "499": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "500": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "502": {
      "op": "itxn_submit"
    },
    "503": {
      "op": "itxn_begin"
    },
    "504": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "505": {
      "op": "bytec_0 // \"asset\"",
      "stack_out": [
        "0",
        "\"asset\""
      ]
    },
    "506": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "507": {
      "error": "check self.asset exists",
      "op": "assert // check self.asset exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "508": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "509": {
      "op": "itxn_field FreezeAssetFrozen",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "511": {
      "op": "itxn_field FreezeAsset",
      "stack_out": []
    },
    "513": {
      "op": "frame_dig -1",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "receiver#0 (copy)"
      ]
    },
    "515": {
      "op": "itxn_field FreezeAssetAccount",
      "stack_out": []
    },
    "517": {
      "op": "intc_2 // afrz",
      "stack_out": [
        "afrz"
      ]
    },
    "518": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "520": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "521": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "523": {
      "op": "itxn_submit"
    },
    "524": {
      "retsub": true,
      "op": "retsub"
    },
    "525": {
      "subroutine": "test.Test.clawback_asset",
      "params": {},
      "block": "clawback_asset",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "526": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "527": {
      "op": "bytec_0 // \"asset\"",
      "defined_out": [
        "\"asset\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"asset\""
      ]
    },
    "528": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "529": {
      "error": "check self.asset exists",
      "op": "assert // check self.asset exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "530": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "532": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "533": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "534": {
      "op": "bytec 4 // \"account_dispensed_to\"",
      "defined_out": [
        "\"account_dispensed_to\"",
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0",
        "\"account_dispensed_to\""
      ]
    },
    "536": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "537": {
      "error": "check self.account_dispensed_to exists",
      "op": "assert // check self.account_dispensed_to exists",
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0"
      ]
    },
    "538": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "539": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0"
      ]
    },
    "541": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "543": {
      "op": "itxn_field Sender",
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "545": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "547": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "549": {
      "op": "intc_3 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "550": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "552": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "553": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "555": {
      "op": "itxn_submit"
    },
    "556": {
      "retsub": true,
      "op": "retsub"
    }
  }
}